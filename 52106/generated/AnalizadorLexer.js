// Generated from Analizador.g4 by ANTLR 4.13.0
// jshint ignore: start
import antlr4 from 'antlr4';




const serializedATN = [4,0,19,125,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,
4,7,4,2,5,7,5,2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,
12,2,13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,1,0,1,0,1,
1,1,1,1,2,1,2,1,3,1,3,1,3,1,3,1,3,1,3,1,4,1,4,1,4,1,4,1,4,1,4,1,5,1,5,1,
5,1,5,1,5,1,5,1,5,1,5,1,5,1,6,1,6,1,6,1,6,1,6,1,7,1,7,1,7,1,7,1,7,1,7,1,
7,1,7,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,9,1,9,1,9,1,9,1,9,1,9,1,10,1,
10,1,11,1,11,1,12,1,12,1,13,1,13,1,14,1,14,1,15,4,15,106,8,15,11,15,12,15,
107,1,16,1,16,5,16,112,8,16,10,16,12,16,115,9,16,1,17,1,17,1,18,4,18,120,
8,18,11,18,12,18,121,1,18,1,18,0,0,19,1,1,3,2,5,3,7,4,9,5,11,6,13,7,15,8,
17,9,19,10,21,11,23,12,25,13,27,14,29,15,31,16,33,17,35,18,37,19,1,0,5,1,
0,48,57,3,0,65,90,95,95,97,122,4,0,48,57,65,90,95,95,97,122,5,0,33,33,44,
44,46,46,58,59,63,63,3,0,9,10,12,13,32,32,127,0,1,1,0,0,0,0,3,1,0,0,0,0,
5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,1,0,0,0,0,13,1,0,0,0,0,15,1,0,0,0,
0,17,1,0,0,0,0,19,1,0,0,0,0,21,1,0,0,0,0,23,1,0,0,0,0,25,1,0,0,0,0,27,1,
0,0,0,0,29,1,0,0,0,0,31,1,0,0,0,0,33,1,0,0,0,0,35,1,0,0,0,0,37,1,0,0,0,1,
39,1,0,0,0,3,41,1,0,0,0,5,43,1,0,0,0,7,45,1,0,0,0,9,51,1,0,0,0,11,57,1,0,
0,0,13,66,1,0,0,0,15,71,1,0,0,0,17,79,1,0,0,0,19,88,1,0,0,0,21,94,1,0,0,
0,23,96,1,0,0,0,25,98,1,0,0,0,27,100,1,0,0,0,29,102,1,0,0,0,31,105,1,0,0,
0,33,109,1,0,0,0,35,116,1,0,0,0,37,119,1,0,0,0,39,40,5,58,0,0,40,2,1,0,0,
0,41,42,5,59,0,0,42,4,1,0,0,0,43,44,5,34,0,0,44,6,1,0,0,0,45,46,5,115,0,
0,46,47,5,101,0,0,47,48,5,103,0,0,48,49,5,117,0,0,49,50,5,110,0,0,50,8,1,
0,0,0,51,52,5,104,0,0,52,53,5,97,0,0,53,54,5,99,0,0,54,55,5,101,0,0,55,56,
5,114,0,0,56,10,1,0,0,0,57,58,5,102,0,0,58,59,5,105,0,0,59,60,5,110,0,0,
60,61,5,115,0,0,61,62,5,101,0,0,62,63,5,103,0,0,63,64,5,117,0,0,64,65,5,
110,0,0,65,12,1,0,0,0,66,67,5,99,0,0,67,68,5,97,0,0,68,69,5,115,0,0,69,70,
5,111,0,0,70,14,1,0,0,0,71,72,5,100,0,0,72,73,5,101,0,0,73,74,5,102,0,0,
74,75,5,101,0,0,75,76,5,99,0,0,76,77,5,116,0,0,77,78,5,111,0,0,78,16,1,0,
0,0,79,80,5,105,0,0,80,81,5,109,0,0,81,82,5,112,0,0,82,83,5,114,0,0,83,84,
5,105,0,0,84,85,5,109,0,0,85,86,5,105,0,0,86,87,5,114,0,0,87,18,1,0,0,0,
88,89,5,115,0,0,89,90,5,97,0,0,90,91,5,108,0,0,91,92,5,105,0,0,92,93,5,114,
0,0,93,20,1,0,0,0,94,95,5,61,0,0,95,22,1,0,0,0,96,97,5,40,0,0,97,24,1,0,
0,0,98,99,5,41,0,0,99,26,1,0,0,0,100,101,5,123,0,0,101,28,1,0,0,0,102,103,
5,125,0,0,103,30,1,0,0,0,104,106,7,0,0,0,105,104,1,0,0,0,106,107,1,0,0,0,
107,105,1,0,0,0,107,108,1,0,0,0,108,32,1,0,0,0,109,113,7,1,0,0,110,112,7,
2,0,0,111,110,1,0,0,0,112,115,1,0,0,0,113,111,1,0,0,0,113,114,1,0,0,0,114,
34,1,0,0,0,115,113,1,0,0,0,116,117,7,3,0,0,117,36,1,0,0,0,118,120,7,4,0,
0,119,118,1,0,0,0,120,121,1,0,0,0,121,119,1,0,0,0,121,122,1,0,0,0,122,123,
1,0,0,0,123,124,6,18,0,0,124,38,1,0,0,0,4,0,107,113,121,1,6,0,0];




const atn = new antlr4.atn.ATNDeserializer().deserialize(serializedATN);


const decisionsToDFA = atn.decisionToState.map( (ds, index) => new antlr4.dfa.DFA(ds, index) );


export default class AnalizadorLexer extends antlr4.Lexer {


    static grammarFileName = "Analizador.g4";
    static channelNames = [ "DEFAULT_TOKEN_CHANNEL", "HIDDEN" ];
    static modeNames = [ "DEFAULT_MODE" ];
    static literalNames = [ null, "':'", "';'", "'\"'", "'segun'", "'hacer'",
                         "'finsegun'", "'caso'", "'defecto'", "'imprimir'",
                         "'salir'", "'='", "'('", "')'", "'{'", "'}'" ];
    static symbolicNames = [ null, null, null, null, "SEGUN", "HACER", "FINSEGUN",
                          "CASO", "DEFECTO", "IMPR", "SALIR", "EQ", "LPAREN",
                          "RPAREN", "LLAVEA", "LLAVEC", "DIGITO", "LETRA",
                          "SIMBOLO", "WS" ];
    static ruleNames = [ "T__0", "T__1", "T__2", "SEGUN", "HACER", "FINSEGUN",
                      "CASO", "DEFECTO", "IMPR", "SALIR", "EQ", "LPAREN",
                      "RPAREN", "LLAVEA", "LLAVEC", "DIGITO", "LETRA", "SIMBOLO",
                      "WS" ];


    constructor(input) {
        super(input)
        this._interp = new antlr4.atn.LexerATNSimulator(this, atn, decisionsToDFA, new antlr4.atn.PredictionContextCache());
    }
}


AnalizadorLexer.EOF = antlr4.Token.EOF;
AnalizadorLexer.T__0 = 1;
AnalizadorLexer.T__1 = 2;
AnalizadorLexer.T__2 = 3;
AnalizadorLexer.SEGUN = 4;
AnalizadorLexer.HACER = 5;
AnalizadorLexer.FINSEGUN = 6;
AnalizadorLexer.CASO = 7;
AnalizadorLexer.DEFECTO = 8;
AnalizadorLexer.IMPR = 9;
AnalizadorLexer.SALIR = 10;
AnalizadorLexer.EQ = 11;
AnalizadorLexer.LPAREN = 12;
AnalizadorLexer.RPAREN = 13;
AnalizadorLexer.LLAVEA = 14;
AnalizadorLexer.LLAVEC = 15;
AnalizadorLexer.DIGITO = 16;
AnalizadorLexer.LETRA = 17;
AnalizadorLexer.SIMBOLO = 18;
AnalizadorLexer.WS = 19;